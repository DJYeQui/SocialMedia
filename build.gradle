plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.4'
    id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(23)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'org.postgresql:postgresql'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.6.0'
    implementation 'org.mapstruct:mapstruct:1.5.5.Final'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.15.0'
    //implementation 'org.springframework.boot:spring-boot-starter'
    //implementation 'org.springframework.boot:spring-boot-starter-security' // Buraya ekleyin
    //testImplementation 'org.springframework.boot:spring-boot-starter-test'
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'  // JWT API
    implementation 'io.jsonwebtoken:jjwt-impl:0.11.5' // JWT Implementation
    implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5' // For JSON Parsing (Jackson)

}

tasks.named('test') {
    useJUnitPlatform()
}
